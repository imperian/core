define(function(require, exports, module) {
	"use strict";

	var oop = require("../lib/oop");

	var TextHighlightRules = require("./text_highlight_rules").TextHighlightRules;

	var MobprogHighlightRules = function() {
		var controlKeywords = (
			"elseif|endif|if|else|set"
		);

		var builtinVariables = (
			"$date|$day|$daytime|$lunar_phase|$me|$me_him|$me_he|$me_his|$me_num|$message|$month|" +
			"$month_num|$n|$rl_day|$rl_month|$rl_year|$room|$state|$text|$thing|$thing_num|$time|" +
			"$who|$who_he|$who_him|$who_his|$who_self|$who_num|$who_race|$who_room|$who_title|$year"
		);

		var builtinFunctions = (
			"$add|$can_see_person|$can_see_person_anywhere|$char|$char_count|$char_search|$chars|" +
			"$colourise|$concat|$count_things|$cure_undeath|$depunct|$div|$find_in_room|" +
			"$find_missing|$find_type_in_room|$gadd|$gamefunc|$gget|$gset|$kvget|$kvset|" + 
			"$list_append|$list_find|$list_new|$list_nth|$list_prepend|$list_remove_nth|" + 
			"$list_replace_nth|$list_size|$list_sort|$make_undead|$mod|$mul|$next_step|" + 
			"$person_city|$person_completed_mission|$person_entourage|$person_guild|" +
			"$person_has_honour|$person_has_mission|$person_has_quest|$person_inv|$person_is_ally|" +
			"$person_is_enemy|$person_is_enemy_of_org|$person_is_novice|$person_is_officer|" +
			"$person_is_officer_not_aide|$person_logged|$person_order|$person_org_enemy|" +
			"$person_org_member|$person_skillpoints|$player_knows_language|$players_in_room|" +
			"$players_online|$pvdel|$pvget|$pvset|$quest_complete|$quest_level|$quest_list_active|" +
			"$quest_percent|$quest_target_count|$quest_target_remaining|$random|$real_room_id|" +
			"$rep_inv|$repeat|$replica_entourage|$search_instance_replica|$search_instance_room|" +
			"$search_room|$shortdesc|$sub|$thing_is_a|$valid_person|$valid_replica|$valid_room|" +
			"$word|$word_count|$word_search|$words|$xdepunct"
		);

		var events = (
			"arrived|asked|attacked|attacking|before_death|before_reset|broken|buried|climbed|closed|" +
			"custom|death|decay|doused|dropped|drunk|dying|eaten|emote|emote_suppressed|emptied|" +
			"entry|exit|gathered|given|given_gold|going_home|gold_put_in|greeted|heard|influenced|" +
			"knocked|lied_on|lit|locked|message|mounted|new_rl_day|nomsg_dropped|nomsg_given|" +
			"nomsg_taken|opened|placed|played|pointed_at|positioned|poured_from|poured_to|probed|" +
			"pulled|pushed|put_inside|random|read|removed|reset|rung|shaken|smoked|sold|taken|taken_out|" +
			"thing_given|thing_put_in|thing_taken_out|thrown|told|touched|turned|unearthed|unlocked|" +
			"unmounted|used|wandered|wielded|witness_attack|witness_death|witness_dropped|witness_emote|" +
			"witness_sleep|witness_taken|witness_wake|worn|xentry|xexit"
		);

		var personaProperties = (
			"age|alignment|can_move|circle[$]|city[$]|city_rank|class[$]|congregation|constitution|cult[$]|" +
			"cult_or_sect[$]|current_endurance|current_health|current_mana|current_willpower|" +
			"daily_quest_days|daily_quests_completed|description[$]|dexterity|drinking_tolerance|" +
			"drunkeness|elevation|experience|explorer_rank|fully_healthy|guild[$]|guild_rank|" +
			"has_blight|has_item|has_pet|intellegence|intro_task|is_auto_looting|is_city_overseer|" +
			"is_city_ruler|is_dead|is_female|is_governor|is_graced|is_guild_master|is_guild_probate|" +
			"is_guild_secretary|is_levitating|is_minister|is_mounted|is_novice_aide|is_novice_head|" +
			"is_officer_of_culture|is_officer_of_security|is_stinky|is_waterwalking|is_wraith|level|" +
			"max_endurance|max_health|max_mana|max_willpower|mentor|moonstone|mount|name[$]|" +
			"novice_quest_done|order[$]|order_rank|race[$]|real_endurance|real_willpower|rite_of_fertility|" +
			"room|sect[$]|sect_rank|strength|towne[$]|valentines_curse"
		);

		var replicaProperties = (
			"actionset|actionspeed|attack_speed|attack_target|buried_room|capacity|death_message[$]|" +
			"deathsdoor_assassin_target|destination|elevation|enter_message[$]|extended_desc[$]|" +
			"fluid_type|fluid_type[$]|following|gate_damage|guard_room|health|health_max|is_armour|" +
			"is_being_worn|is_berserk|is_container|is_dead|is_decaying|is_edible|is_environ_confined|" +
			"is_female|is_fighting|is_fluid_container|is_invincible|is_language_teacher|is_lidded|" +
			"is_lightable|is_lit|is_locked|is_loyal|is_mob|is_not_takeable|is_open|is_panicking|" +
			"is_resetter|is_sentient|is_special|is_wanderer|is_weapon|is_writeable|langauge[$]|" +
			"leave_message[$]|level|long_desc[$]|loyalty[$]|loyalty_to_org[$]|loyalty_to_person[$]|loyalty_to_rep|" +
			"months_till_decay|mother|name[$]|no_attack|nourishment|reset_as_decay|reset_room|reset_time|" +
			"room|rubble_pieces|seconds_till_reset|short_desc[$]|sips_left|unlisted|weight|written_text[$]"
		);

		var roomProperties = (
			"affiliation[$]|allows_digging|area[$]|area_name[$]|been_foraged|brief_desc[$]|darkness|" +
			"environment[$]|flood_level|is_exterminated|is_iced|is_indoors|is_onfire|is_parted|" +
			"is_underground|is_underwater|is_watery|name[$]|sandbags|verbose_desc[$]"
		);

		var systemCalls = (
			"addgold|addhonour|addxp|areamote|clearlog|doaction|enemy|expression|gamecall|log|" +
			"lose_entourage|mattack|memote|message|mfollow|missioncomplete|mmove|morgtell|msay|" +
			"msaydrunken|msaylang|mshout|mshouta|mteleportroom|mtell|oactset|omote|planemote|" +
			"pmote|putrep|quest_target_add|quest_target_set|questadd|questcomplete|questcompleteall|" +
			"questpercent|questpercentall|questremove|questremoveall|raid_set_endroom|raid_set_enemy|" +
			"raid_start|raid_wipe|reset|rmote|rmote_room|rmote_rooms|roomed|taskcomplete|umote|wait"
		);

		var keywordMapper = this.createKeywordMapper({
			"support.function": builtinFunctions + "|" + systemCalls,
			"variable.language": builtinVariables
		}, "identifier");

		this.$rules = {
			"start" : [
				{
					token : "comment.line.number-sign",
					regex : /^\s*#.*$/
				}, {
					token : ["keyword.control", "text", "constant.language", "text", "text"],
					regex : /^(define)(\s+)([\S]+)(\s+)(.*)$/
				}, {
					token : ["keyword.control", "text", "variable.language"],
					regex : "^(event)(\\s+)(" + events +")$",
					next  : "event"
				}, {
					token : "invalid.illegal",
					regex : /.*/
				}
			], "event" : [
				{
					token : "comment.line.number-sign",
					regex : /^\s*#.*$/
				}, {
					token : "string",
					regex : '["](?:(?:\\\\.)|(?:[^"\\\\]))*?["]'
				}, {
					token : "string",
					regex : "['](?:(?:\\\\.)|(?:[^'\\\\]))*?[']"
				}, {
					token : "keyword.control",
					regex : /^endevent$/,
					next  : "start"
				}, {
					token : "keyword.control",
					regex : "^\\s*(?:" + controlKeywords + ")"
				},{
					token : ["storage.type", "constant.character"],
					regex : "([$]?(?:persona|replica|room))(\\[)",
				}, {
					token : ["constant.character", "text", "storage.modifier"],
					regex : "(\\])(\\.)([a-zA-Z_0-9]+\\b[$]?)"
				}, {
					token : keywordMapper,
					regex : "[a-zA-Z$][a-zA-Z_]*\\b"
				}
			]
		};
	};

	oop.inherits(MobprogHighlightRules, TextHighlightRules);

	exports.MobprogHighlightRules = MobprogHighlightRules;
});